[{"/Users/stephenblair/Desktop/githunt/src/index.js":"1","/Users/stephenblair/Desktop/githunt/src/App.js":"2","/Users/stephenblair/Desktop/githunt/src/Feed.js":"3","/Users/stephenblair/Desktop/githunt/src/components/Brand.js":"4","/Users/stephenblair/Desktop/githunt/src/components/PageHeader.js":"5","/Users/stephenblair/Desktop/githunt/src/components/GroupTitle.js":"6","/Users/stephenblair/Desktop/githunt/src/components/Filters.js":"7","/Users/stephenblair/Desktop/githunt/src/components/Repo.js":"8"},{"size":329,"mtime":1610540733904,"results":"9","hashOfConfig":"10"},{"size":255,"mtime":1610541021593,"results":"11","hashOfConfig":"10"},{"size":2121,"mtime":1610632642097,"results":"12","hashOfConfig":"10"},{"size":511,"mtime":1610556937202,"results":"13","hashOfConfig":"10"},{"size":693,"mtime":1610544598312,"results":"14","hashOfConfig":"10"},{"size":519,"mtime":1610557097644,"results":"15","hashOfConfig":"10"},{"size":2775,"mtime":1610566443734,"results":"16","hashOfConfig":"10"},{"size":3982,"mtime":1610562245900,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1dohajl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/stephenblair/Desktop/githunt/src/index.js",[],["36","37"],"/Users/stephenblair/Desktop/githunt/src/App.js",[],"/Users/stephenblair/Desktop/githunt/src/Feed.js",["38","39"],"/Users/stephenblair/Desktop/githunt/src/components/Brand.js",[],"/Users/stephenblair/Desktop/githunt/src/components/PageHeader.js",[],"/Users/stephenblair/Desktop/githunt/src/components/GroupTitle.js",[],"/Users/stephenblair/Desktop/githunt/src/components/Filters.js",["40"],"import React,  { useEffect, useState } from 'react';\nimport {  Button, Menu, MenuButton, MenuItem, MenuList, Select, Stack, Box } from '@chakra-ui/react';\nimport languages from '../data/languages.json';\nimport { FaCalendarAlt,  FaTable, FaList } from 'react-icons/fa';\n\nexport function Filters (props) {\n    const { \n        onViewChange,\n        onDateJumpChange,\n        dateJump,\n        language,\n        onLanguageChange, \n    } = props;\n    const [viewType, setViewType] = useState('grid');\n\n    useEffect( () => {\n        onViewChange(viewType);\n    }, [viewType]);\n\n    return (\n        <Stack isInline mb=\"25px\">\n            <Select bg=\"white\" value={language} onChange={(e) => onLanguageChange(e.target.value)}>\n                {languages.map((language) => (\n                    <option key={language.value} value={language.value}>{language.label}</option>\n                ))}\n            </Select>\n            <Menu>\n                <MenuButton \n                    textAlign=\"left\"\n                    w=\"250px\"\n                    justifyContent=\"flex-start\"\n                    as={Button} \n                    bg=\"white\" \n                    borderWidth={1} \n                    px=\"15px\" \n                    fontWeight={400}\n                    _focus={{ boxShadow: \"none\"}}\n                    leftIcon={<FaCalendarAlt />}\n                >\n                    <Box as=\"span\" textTransform=\"capitalize\">{ dateJump }</Box>\n                </MenuButton>\n                <MenuList>\n                    <MenuItem onClick={() => onDateJumpChange('day')}>Daily</MenuItem>\n                    <MenuItem onClick={() => onDateJumpChange('week')}>Weekly</MenuItem>\n                    <MenuItem onClick={() => onDateJumpChange('month')}>Monthly</MenuItem>\n                    <MenuItem onClick={() => onDateJumpChange('year')}>Yearly</MenuItem>\n                </MenuList>\n            </Menu>\n\n            <Stack isInline spacing={0} borderWidth={1} bg=\"white\" rounded=\"5px\" alignItems=\"center\" ml=\"10px\">\n                <Button \n                    h=\"100%\" \n                    onClick={() => setViewType('grid')}\n                    fontWeight={400} \n                    roundedRight={0} \n                    bg={ viewType === 'grid' ? 'gray.200' : 'white' }\n                    leftIcon={<FaTable />}\n                >\n                    Grid\n                </Button>\n                <Button \n                    h=\"100%\" \n                    onClick={() => setViewType('list')}\n                    fontWeight={400} \n                    roundedLeft={0} bg={ viewType === 'list' ? 'gray.200' : 'white' } \n                    leftIcon={<FaList />}\n                >\n                    List\n                </Button>\n            </Stack>\n        </Stack>\n    )\n}","/Users/stephenblair/Desktop/githunt/src/components/Repo.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":14,"column":12,"nodeType":"47","messageId":"48","endLine":14,"endColumn":21},{"ruleId":"45","severity":1,"message":"49","line":15,"column":12,"nodeType":"47","messageId":"48","endLine":15,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":18,"column":8,"nodeType":"52","endLine":18,"endColumn":18,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'startDate' is assigned a value but never used.","Identifier","unusedVar","'endDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onViewChange'. Either include it or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [onViewChange, viewType]",{"range":"59","text":"60"},[560,570],"[onViewChange, viewType]"]